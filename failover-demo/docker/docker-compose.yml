version: "3.8"

services:
  server1:
    image: python:3.9-slim
    container_name: server1
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./python-scripts:/app
    command: python /app/transaction_generator.py
    depends_on:
      - kafka
    networks:
      - kafka_default

  server2:
    image: python:3.9-slim
    container_name: server2
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./python-scripts:/app
    command: python /app/transaction_generator.py
    depends_on:
      - kafka
    networks:
      - kafka_default

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_LISTENER_SECURITY_PROTOCOL: INSIDE
      KAFKA_LISTENER_NAME: INSIDE
      KAFKA_LISTENER_PORT: 9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT
      KAFKA_LISTENER_MODE: 2
      KAFKA_LISTENER_NAME_INSIDE: INSIDE
      KAFKA_LISTENER_SECURITY_PROTOCOL_INSIDE: PLAINTEXT
      KAFKA_LISTENER_PORT_INSIDE: 9093
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9093:9093"
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    environment:
      ZOOKEEPER_ADVERTISED_LISTENERS: INSIDE://zookeeper:2181
    ports:
      - "2181:2181"

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"

  loadbalancer:
    image: nginx:latest
    container_name: loadbalancer
    volumes:
      - "C:/Users/adhd/Documents/failover-demo/nginx/nginx.conf:/etc/nginx/nginx.conf"
    ports:
      - "8080:8080"
    depends_on:
      - server1
      - server2

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin  # Set your admin password
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  kafka-exporter:
    image: bitnami/kafka-exporter
    ports:
      - "9308:9308"
    environment:
      KAFKA_BROKERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka_default

  mongodb-primary:
    image: mongo
    container_name: mongodb-primary
    ports:
      - "27017:27017"
    networks:
      - kafka_default

  mongodb-backup:
    image: mongo
    container_name: mongodb-backup
    ports:
      - "27018:27018"
    networks:
      - kafka_default

  mongodb-exporter:
    image: bitnami/mongodb-exporter
    ports:
      - "9216:9216"
    environment:
      MONGODB_URI: mongodb://mongodb-backup:27018
    depends_on:
      - mongodb-backup
    networks:
      - kafka_default

networks:
  kafka_default:
    driver: bridge